var documenterSearchIndex = {"docs":
[{"location":"ch00/","page":"はじめに","title":"はじめに","text":"Memorandum on Julia Language v1.6","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"Hiroharu Sugawara, Ph. D.","category":"page"},{"location":"ch00/#ch00","page":"はじめに","title":"はじめに","text":"","category":"section"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"本文は，大学1年次学生のためのプログラミング演習の手引きである．","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"Julia言語の v1.6 を採用した． Julia言語は，開発効率と実行速度の両立を目指した言語である． Juliaは，汎用である（どんな目的にも使える）が， 数値計算の扱いに特に優れている．","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"本文では，プログラムと実行結果を，たくさん紹介する． それらの多くは，大学初年級の数学や技術工学の分野で現れる 数値計算から選んでいる．","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"プログラミングの演習が，単に言語の習得に留まらず， STEAM (Science, Technology, Engineering, Arts and Mathematics) の理解の助けになることを希望する．","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"実行結果を，そのまま取り込んでいる．","category":"page"},{"location":"ch00/#動作環境","page":"はじめに","title":"動作環境","text":"","category":"section"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"設置（インストール）とは，アプリケーションやプログラムを利用できるように，計算機の環境を整えることをいう．","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"本文では，利用するPCで，以下の設置がなされていることを前提とする．","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"Julia 1.3 以上が設置されていること（2021年7月14日の最新版は Julia 1.6.2）\nPyPlot パッケージ（グラフ描画）が設置されていること\nJupyter notebookを用いる場合は IJulia パッケージが設置されていること","category":"page"},{"location":"ch00/#設定方法","page":"はじめに","title":"設定方法","text":"","category":"section"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"プログラミング演習の環境を設定する方法は別のページ → プログラミング演習 2021秋冬学期向け環境 で説明した．以下の二通りを紹介する","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"手元 PC に実行環境を構築する方法\nクラウド環境 Google colab 上に構築する方法","category":"page"},{"location":"ch00/#Julia言語のバージョンについて","page":"はじめに","title":"Julia言語のバージョンについて","text":"","category":"section"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"Julia言語の 1.0 版は，2018年8月に公開された． Julia 1.0 released","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"本文では，2021年3月に公開された 1.6 版を用いる． Julia v1.6.0 has been released","category":"page"},{"location":"ch00/#Julia言語の情報検索","page":"はじめに","title":"Julia言語の情報検索","text":"","category":"section"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"Julia をキーワードに検索しても，人の名前によく使われる単語であるので， Julia言語の内容にたどり着くのが難しい．","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"Julialang で検索することを，強く勧める．","category":"page"},{"location":"ch00/#Julia言語の情報源・参考文献","page":"はじめに","title":"Julia言語の情報源・参考文献","text":"","category":"section"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"本文では，Julia v1.6 を用いる（再掲）","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"Julia Documentation v1.6, 本家のドキュメント，英語\nJulia Cheat Sheet\nThe First Track to (a quick and dirty overview of) Julia 1.0 英語版\n早わかり (すぐに使える) Julia 1.0 日本語版．翻案は菅原\n1から始めるJulia, 進藤 裕之，佐藤 建太，コロナ社 (2020), ISBN 978-4-339-02905-5\nWEB+DB PRESS Vol.111 第2特集に Julia の詳細な紹介記事がある．\n雑誌 ISBN 978-4-297-10657-7, 技術評論社，2019年6月24日発売．\nサポートページ\nTanmay Teaches Julia for Beginners: A Springboard to Machine Learning for All Ages, Tanmay Bakshi, 2020, ISBN:978-1260456639, 英語\nJulia express,　Bogumił Kami´nski さん，英語\n最新版 Julia 1.6.1\nThe Julia Express, ソース\nJulia高速チュートリアル, 日本語，Julia 0.7以上，@bicycle1885 (Kenta Sato)さん\nJulia Language Programming ~ お気楽 Julia プログラミング超入門 広井 誠さん，Julia 1.0\nJulia & IJulia Cheat-Sheet , 英語 @stevenj (MIT), Julia 1.0\nVarious Julia plotting examples using PyPlot, @gizmaa (github)\nThink Julia: How to Think Like a Computer Scientist, Ben Lauwens, Allen Downey, 英語\nオンライン版 Think Julia: How to Think Like a Computer Scientist\n書籍→ https://www.oreilly.com/library/view/think-julia/9781492045021/","category":"page"},{"location":"ch00/#数値計算プログラミングの参考書","page":"はじめに","title":"数値計算プログラミングの参考書","text":"","category":"section"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"本文では，数値計算の話題を多く扱っている．以下の文献を参考にした．","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"数値計算の常識，伊理 正夫，藤野 和建，共立出版，1985年，ISBN: 9784320013438, CiNiiBooksへのリンク  BN00729247\n数値計算講義，金子 晃，サイエンス社，2009年，ISBN: 9784781912257, CiNiiBooksへのリンク  BA89645032","category":"page"},{"location":"ch00/#節の記号","page":"はじめに","title":"節の記号","text":"","category":"section"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"以下本文の各節表題には，冒頭に ■，▼，▲，★ の記号が付いている． 各記号の意味は，以下の通りである．","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"■  Julia 言語の解説\n▼  例題を用いた解説\n▲  練習・応用問題\n★  その回のまとめ","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"以上の記号の前に，● の記号がついた節は，高度な内容を含んだり， 後の説明を先取りしたりしている．","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"更に，◎ は，Julia 0.6.4 から書き換える場合の注意を示す．","category":"page"},{"location":"ch00/#免責事項など","page":"はじめに","title":"免責事項など","text":"","category":"section"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"本文\\1，，，，不定期に更新する．節の配置も変更する可能性がある．","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"本文\\1，著者らの知見に基づく情報の公開を目的としている． 本文に書かれた内容およびその正誤によって生じた結果につい\\1， 著者らはいかなる責任を負わない．","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"本文に掲載した内容は，著者らの環境でのみ動作の確認を行なっており， いかなる環境においても再現できることを保証するものではない．","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"実行環境","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"MacOSX version 11.4\nJulia 1.6.2（Julia公式ページから配布されたバイナリー）","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"Copyright (c) 2018–2021 Hiroharu Sugawara","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"本文は，いわゆる MIT LICENSE で公開する． LICENSEの本文は MIT License を，その参考和訳は MIT License 参考和訳 を参照せよ．","category":"page"},{"location":"ch00/","page":"はじめに","title":"はじめに","text":"\n# 扱わないこと\n\n* Interfaces\n* Modules\n* Metaprogramming\n* Networking and Streams\n* Parallel Computing\n* Parametric types\n* Profiling\n","category":"page"},{"location":"ch01/#ch01","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"","category":"section"},{"location":"ch01/#対話形式で使う","page":"第1回：▼ 簡単なグラフを描く","title":"■ 対話形式で使う","text":"","category":"section"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"本文では，対話形式で，Julia を利用する．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"Juliaをコマンドラインから利用している場合は， プロンプト julia> が印字され，利用者の入力を待っている．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"命令を打ち込み，ENTER キーを押すと， その命令を計算（評価）した結果が印字される．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"1","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"上の例では，1 という文字の並びから， 1 という数を内部で作成し， それを計算の結果として印字したのである．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"計算機側から見ると， 利用者の入力を読み込み（Read）， 入力された命令を評価し（Eval）， その結果を印字する（Print）ことを，繰り返す（Loop）． この４つの頭文字をとって， 対話型利用のことを REPL とも呼ぶ．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"Jupyter notebookを用いる場合には， Code cellが表示されている． ここに命令を打ち込み，SHIFT + ENTER キーを押すと， その命令を評価した結果が出力される．","category":"page"},{"location":"ch01/#電卓として使う","page":"第1回：▼ 簡単なグラフを描く","title":"■ 電卓として使う","text":"","category":"section"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"数と数との四則演算をしてみよう．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"加算には + , 減算には - の文字を使う． 乗算には * （アスタリスク asterisk と読む）， 除算には /（スラッシュ slash と読む）の文字を用いる．（なお % は残余を表す→ ■ 残余 rem と整商 div ）","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"1 + 2\n3 * 4","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"数式と同じように，乗算と除算は，加算・減算に優先する． 計算の順序を変えるには，括弧 ( と ) との組を用いる","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"2 + 3 * 4\n(2 + 3) * 4","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"除算の結果は，小数となる．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"2 / 2\n1 / 3\n5 / 2","category":"page"},{"location":"ch01/#変数に値を代入する","page":"第1回：▼ 簡単なグラフを描く","title":"■ 変数に値を代入する","text":"","category":"section"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"値には，名前（名札，ラベル）をつけることができる． この名前を変数（variable）といい，名前をつける操作を「値を変数に代入する（assign）」という． 変数には，色々な種類の値を代入できる．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"変数を評価すると，変数の値となる．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"# 変数 x に 値 2 を代入する\nx = 2\n# 変数 x の値を用いる\nx + 1\n# 変数 x に 別の値 3 を再代入する\nx = 3","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"# はコメントである． # から行末までの文字は全て無視される．","category":"page"},{"location":"ch01/#変数名の規則","page":"第1回：▼ 簡単なグラフを描く","title":"■ 変数名の規則","text":"","category":"section"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"Allowed Variable Names (section)","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"変数の名前（変数名）は，以下のようにつける．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"変数名の最初の文字は， 半角のアルファベット（ a から z まで，A から Z まで）， または，下線（アンダースコア _ ）のいずれかでなければならない． 変数の2文字目以降は，さらに，半角の数字（ 0 から 9 ）， または，半角の感嘆符 ! を含めることができる．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"半角文字とは「かな漢字変換機能」を用いずに， キーボードから打ち込める文字と考えてよい．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"変数名には，漢字やギリシャ文字などを使うことができるが， ここでは説明を省略する．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"Stylistic Conventions (section)","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"今後出現する，定数，型，関数，マクロ，モジュール，パッケージの名前も，変数名の約束と同じである． ただし，慣習として，以下のように使い分ける．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"変数名は小文字で始める．\n型，モジュール，パッケージの名前は大文字で始める．\n関数やマクロの名前は小文字で始める．下線（アンダースコア _)は用いない．","category":"page"},{"location":"ch01/#ベクトル","page":"第1回：▼ 簡単なグラフを描く","title":"■ ベクトル","text":"","category":"section"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"角括弧 [ と ] との間に，カンマ , で区切って 数を並べたものを，（数の）ベクトルという．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"ベクトルは，縦に印字される（列ベクトル，column vector）．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"[1, 3, 2]","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"変数に，ベクトルを代入しよう．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"xs = [1, 2, 2, 1]\nys = [1, 1, 3, 1]","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"note: Note\n本文の筆者は，（ベクトルなど）複数の値を内部に含むデータに対する変数の名前を「英語の複数形の名詞」とすることが多い（多くの場合，末尾を s で終える）．そのデータの各要素を表す変数の名前を単数形とする．（大文字は定数などを表す約束だから）大文字と小文字で，ベクトルなどとその要素を区別することは避けた方がよい．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"ベクトル v とスカラー c とに演算子 * を適用する v * c と，各要素をスカラーで乗じたベクトルが得られる． スカラーとベクトルとに演算子 * を適用する c * v と，同じ結果が得られる．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"xs = [1, 2, 2, 1] #hide\nys = [1, 1, 3, 1] #hide\nxs * 2\n2 * xs","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"ベクトル v とスカラー c とに演算子 / を適用する v / cと，各要素をスカラーで除したベクトルが得られる．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"xs = [1, 2, 2, 1]  #hide\nys = [1, 1, 3, 1]  #hide\nxs / 2","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"ベクトル v とスカラー c とに演算子 .+ を適用する v .+ c と，ベクトル v の各要素にスカラー c を加算した要素からなるベクトルが得られる． また，演算子 .- を適用する v .- c と，v の各要素から c を減算した要素からなるベクトルが得られる． + や -の前のピリオド . は「各要素に対する演算」を意味する．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"xs = [1, 2, 2, 1] #hide\nys = [1, 1, 3, 1] #hide\nxs .+ 2\nxs .- 2","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"この場合，ピリオドが付かない演算子 +や - を用いると，例外（exception, エラー）となる．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"julia> xs + 2\nERROR: MethodError: no method matching +(::Array{Int64,1}, ::Int64)","category":"page"},{"location":"ch01/#三角形を描く","page":"第1回：▼ 簡単なグラフを描く","title":"▼ 三角形を描く","text":"","category":"section"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"「パッケージ」とは，関連する関数，定数，変数などをまとめたものである．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"PyPlot パッケージは， グラフを描くためのパッケージの一つである．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"パッケージを用いるには，using <<パッケージ名>> を起動し，パッケージを読み込んでおく．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"PyPlot パッケージに含まれる関数 plot は，グラフを描くための一般的な関数である．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"plot(xs,ys) の形で用いると， ベクトル xs , ys から一つづつ数を取り出し． それらを各々 x 座標，y 座標とする点を打つことを命令する．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"通常は，plt.plot() の形で用いる． plt は，図の寸法や，グラフの軸を含む[オブジェクト]である．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"using Conda;\nConda.add(\"matplotlib\");\nENV[\"PYTHON\"] = \"\"\nimport Pkg;\nPkg.build(\"PyCall\");\nusing PyCall;\n# ENV[\"MPLBACKEND\"] = \"qt5agg\"\nENV[\"MPLBACKEND\"] = \"Agg\"   # no-gui\nPkg.build(\"PyPlot\");\nusing PyPlot\nrcParams = PyPlot.PyDict(PyPlot.matplotlib.\"rcParams\");\nrcParams[\"figure.figsize\"]=(6.4,4.8);\nrcParams[\"font.family\"] = \"TakaoPGothic\";\nrcParams[\"font.size\"] = 14;\nrcParams[\"figure.subplot.left\"] = 0.17;\nrcParams[\"figure.subplot.bottom\"] = 0.15;\nrcParams[\"figure.subplot.right\"] = 0.85;\nrcParams[\"axes.linewidth\"] = 1.5;\nrcParams[\"legend.framealpha\"] = 0.0;\nrcParams[\"xtick.major.width\"] = 1.5;\nrcParams[\"ytick.major.width\"] = 1.5;\nrcParams[\"xtick.minor.width\"] = 1.5;\nrcParams[\"ytick.minor.width\"] = 1.5;\nrcParams[\"xtick.minor.width\"] = 1.5;\nrcParams[\"ytick.minor.width\"] = 1.5;\nrcParams[\"xtick.major.size\"] = 12;\nrcParams[\"ytick.major.size\"] = 12;\nrcParams[\"xtick.minor.size\"] = 8;\nrcParams[\"ytick.minor.size\"] = 8;","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"# PyPlot パッケージの読み込み\nusing PyPlot\nplt.figure() #hide\n\nxs = [1, 2, 2, 1]\nys = [1, 1, 3, 1]\n# 描画\nplt.plot(xs, ys)\nplt.savefig(\"ch01-tri-plot.svg\") #hide\nplt.close(\"all\") #hide","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"(Image: )","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"note: Note\nplt は，PyPlot パッケージで定義された変数である．変数 plt を書き換えてしまうと，描画の指令が期待通りにならなくなる可能性が高い．変数名が定義済であるかどうかを調べるためには，変数の値を出力することを勧める．何か定義が出てきたら定義済であるので，その名前を変数や関数などの名前として使うことは避ける．julia> using PyPlot\n\njulia> plt\nPyObject <module 'matplotlib.pyplot' from '/Users/hs/.julia/conda/3/lib/python3.7/site-packages/matplotlib/pyplot.py'>","category":"page"},{"location":"ch01/#練習","page":"第1回：▼ 簡単なグラフを描く","title":"▲ 練習","text":"","category":"section"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"xs や ys の値を変えて，別の図形を表示してみよ．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"xs と ys の要素の「数」が等しくない場合は，どうなるか？ 試してみよ．","category":"page"},{"location":"ch01/#範囲","page":"第1回：▼ 簡単なグラフを描く","title":"■ 範囲","text":"","category":"section"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"Base.:: — Function","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"二つ，または，三つの数字をコロン（ : ）で区切ったデータは， 有限の（＝要素の数が定まった）等差数列（arithmetic sequence）を 表す．このようなデータの種類を 範囲型（range type）という．範囲型を持つデータを 範囲 と呼ぶ．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"note: Note\n「型（type, かた）」とは「データの種類」である．詳しくは，後の節で述べる．→ ■ 型","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"二つの数をコロン （ : ）で区切った量 a:b は， a から 1 づつ増やして，b を超えるまでの数からなる等差数列である． 三つの数をコロンで区切った量 a:c:b は， a から c づつ増やして，b を超えるまでの数からなる等差数列である． c は，等差（common difference）である．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"note: Note\n一定間隔 c を「等差（common difference）」と本文では呼ぶ．数学では「公差」と呼ばれることもあるが，工学での「公差」は tolerance を意味することが多い．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"1:5\nxs = 0:0.1:1","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"範囲から各要素を取り出してベクトルに変換するには， collect 関数を用いる．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"xs = 0:0.1:1 #hide\ncollect(xs)","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"等差 c は，負の値でもよい． この場合，a:c:b は，a から c づつ増やして， b を「下回る」までの数からなる等差数列となる．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"xs = 10:-1:0\ncollect(xs)","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"等差 c が負で，a  b だと，要素は 0個になる．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"xs = 2:-1:5\ncollect(xs)","category":"page"},{"location":"ch01/#範囲の要素をスカラーで加減乗する","page":"第1回：▼ 簡単なグラフを描く","title":"■ 範囲の要素をスカラーで加減乗する","text":"","category":"section"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"範囲 v とスカラー c とに演算子 * を適用する v * c と， v の各要素にスカラーを乗じた結果に相当する範囲が得られる． スカラーと範囲とに演算子 * を適用する c * v と，同じ結果が得られる．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"xs = 0:2:10\n# 各要素を 2倍する\nxs * 2\n2 * xs","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"範囲とスカラーとに演算子 / を適用する v / c と， 各要素をスカラーで除した結果に相当する範囲が得られる．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"xs = 0:2:10 #hide\n# 各要素を 2で除す\nxs / 2","category":"page"},{"location":"ch01/#式のグラフを描く","page":"第1回：▼ 簡単なグラフを描く","title":"▼ 式のグラフを描く","text":"","category":"section"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"plot 関数に対して，同じ寸法の二つのベクトルまたは範囲 xs，ys を渡すと，  xs , ys から一つづつ要素を取り出し， これらを x y 座標とする点同士を結んで，図形が描かれるのであった．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"式のグラフを描くには，xs から計算した式の値を，ys に与えればよい．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"二つの直線 y=-x と y=2x-1 のグラフを描いてみよう．","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"# PyPlot パッケージの読み込み\nusing PyPlot\nplt.figure() #hide\n\nxs = -1:0.1:1\n# 描画\nys1 = -1 * xs\nplt.plot(xs, ys1)\nys2 = 2 * xs .- 1\nplt.plot(xs, ys2)\nplt.savefig(\"ch01-graph-plot.svg\"); nothing; #hide\nplt.close(\"all\") #hide","category":"page"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"(Image: )","category":"page"},{"location":"ch01/#練習-2","page":"第1回：▼ 簡単なグラフを描く","title":"▲ 練習","text":"","category":"section"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"別の直線を描いてみよ．","category":"page"},{"location":"ch01/#今回のまとめ","page":"第1回：▼ 簡単なグラフを描く","title":"★ 今回のまとめ","text":"","category":"section"},{"location":"ch01/","page":"第1回：▼ 簡単なグラフを描く","title":"第1回：▼ 簡単なグラフを描く","text":"対話形式の使い方\n数の四則演算\nPyPlotパッケージを用いた図形とグラフの描画\nベクトルと等差数列","category":"page"},{"location":"LICENSE/#MIT-License","page":"MIT License","title":"MIT License","text":"","category":"section"},{"location":"LICENSE/","page":"MIT License","title":"MIT License","text":"Copyright (c) 2018–2022 Hiroharu Sugawara","category":"page"},{"location":"LICENSE/","page":"MIT License","title":"MIT License","text":"Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","category":"page"},{"location":"LICENSE/","page":"MIT License","title":"MIT License","text":"The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","category":"page"},{"location":"LICENSE/","page":"MIT License","title":"MIT License","text":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","category":"page"},{"location":"LICENSEja/#MIT-License-参考和訳","page":"MIT License 参考和訳","title":"MIT License 参考和訳","text":"","category":"section"},{"location":"LICENSEja/","page":"MIT License 参考和訳","title":"MIT License 参考和訳","text":"Copyright (c) 2018–2022  菅原 宏治 (Hiroharu Sugawara)","category":"page"},{"location":"LICENSEja/","page":"MIT License 参考和訳","title":"MIT License 参考和訳","text":"以下に定める条件に従い，本ソフトウェアおよび関連文書のファイル（以下「ソフトウェア」）の複製を取得するすべての人に対し，ソフトウェアを無制限に扱うことを無償で許可します．これには，ソフトウェアの複製を使用，複写，変更，結合，掲載，頒布，サブライセンス，および/または販売する権利，およびソフトウェアを提供する相手に同じことを許可する権利も無制限に含まれます．","category":"page"},{"location":"LICENSEja/","page":"MIT License 参考和訳","title":"MIT License 参考和訳","text":"上記の著作権表示および本許諾表示を，ソフトウェアのすべての複製または重要な部分に記載するものとします．","category":"page"},{"location":"LICENSEja/","page":"MIT License 参考和訳","title":"MIT License 参考和訳","text":"ソフトウェアは「現状のまま」で，明示であるか暗黙であるかを問わず，何らの保証もなく提供されます．ここでいう保証とは，商品性，特定の目的への適合性，および権利非侵害についての保証も含みますが，それに限定されるものではありません． 作者または著作権者は，契約行為，不法行為，またはそれ以外であろうと，ソフトウェアに起因または関連し，あるいはソフトウェアの使用またはその他の扱いによって生じる一切の請求，損害，その他の義務について何らの責任も負わないものとします．","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = memoProgClass2022w","category":"page"},{"location":"#memoProgClass2022w","page":"Home","title":"memoProgClass2022w","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for memoProgClass2022w.","category":"page"},{"location":"#年度版","page":"Home","title":"2022年度版","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"この内容は，2022年度後期の授業（2022年10月から2023年1月）向けに公開するものです．","category":"page"},{"location":"","page":"Home","title":"Home","text":"実行結果は，Julia 1.x （→ FAQ: Julia Releases ）により出力されたものです．","category":"page"},{"location":"#Preface","page":"Home","title":"Preface","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages=[\n\t\"ch00.md\",\n\t\"LICENSE.md\",\n\t\"LICENSEja.md\"\n]","category":"page"},{"location":"#Main","page":"Home","title":"Main","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages=[\n\t# \"ch01.md\",\n\t# \"ch02.md\",\n\t# \"ch03.md\",\n\t# \"ch04.md\",\n\t# \"ch05.md\",\n\t# \"ch06.md\",\n\t# \"ch06.md\",\n\t# \"ch07.md\",\n\t# \"ch08.md\",\n\t# \"ch08.md\",\n\t# \"ch09.md\",\n\t# \"ch10.md\",\n\t# \"ch11.md\",\n\t# \"ch12.md\",\n\t# \"ch13.md\"\n]","category":"page"},{"location":"#Appendices","page":"Home","title":"Appendices","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages=[\n\t# \"ch0a.md\",\n\t# \"ch0b.md\"\n]","category":"page"}]
}
